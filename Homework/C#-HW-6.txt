# C# Homework 06
## Chad Spivack
## January 27, 2021

### 1. What is an exception?

Error handling that code that separates errors from the rest of the code so the program doesn't crash.

### 2. What happens in a try block if the program executes without errors?

They all run until the end.

### 3. How does the catch mechanism work for unhandled exceptions?

It traps errors and processes them acccording to the program code.

### 4. What happens in a program if an exception block fails to handle an particular error?

Program terminates with an unhandled exception.

### 5. What is the parent class for all exceptions? How does this work?

The *Exception* class. The handler traps every possible exception.

### 6. How do you determine the type of an error?

The gettype() function in the exception class.

### 7. What is the purpose of integer checking?

Making sure you don't overflow your data type causing a wrong answer.

### 8. What is the range of values than a signed Int32 type can contain? State the lowest value and the
highest value.

-2147483648 to 214748647

### 9. What is the range of values than an unsigned Int32 type can contain? State the lowest value and the
highest value. What is the difference between a signed integer and an unsigned integer? Can signed
integers and unsigned integers represent the same amount of numbers?

0 to 4294967295

### 10. What does the finally block do?

A way to ensure a code block is always run regardless of whether or not there was an exception.

### 11. (Thought question) When would you not use a finally block in a try/catch construction?


Probably with an intrusion detection software, you'd probably want everything to stop if an exception was thrown.
